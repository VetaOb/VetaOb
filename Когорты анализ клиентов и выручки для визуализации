{
 "cells": [
  {
   "cell_type": "markdown",
   "source": [
    "### Код для автоматизации клиентов, купленных минут и прибыли по когортам и вывода на дашборд"
   ],
   "metadata": {
    "collapsed": false
   },
   "id": "23b311230181312a"
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "ae696547",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-06-18T10:35:56.955358Z",
     "start_time": "2024-06-18T10:35:55.287218Z"
    }
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "from sqlalchemy import create_engine\n",
    "\n",
    "engine = create_engine('postgresql://hidden')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dd499be8",
   "metadata": {},
   "source": [
    "### Когортная выручка"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "f7d77ebf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>client</th>\n",
       "      <th>money</th>\n",
       "      <th>first_date</th>\n",
       "      <th>rn</th>\n",
       "      <th>period</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2023-05-01</td>\n",
       "      <td>rec00076pYVJuhg5l</td>\n",
       "      <td>7990.0</td>\n",
       "      <td>2023-05-01</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2022-11-01</td>\n",
       "      <td>rec00zU79EXuoL2Oe</td>\n",
       "      <td>5990.0</td>\n",
       "      <td>2022-11-01</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2022-10-01</td>\n",
       "      <td>rec01rU6UnCflTwCr</td>\n",
       "      <td>3748.0</td>\n",
       "      <td>2022-10-01</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2022-10-01</td>\n",
       "      <td>rec01rU6UnCflTwCr</td>\n",
       "      <td>3748.0</td>\n",
       "      <td>2022-10-01</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2022-11-01</td>\n",
       "      <td>rec01rU6UnCflTwCr</td>\n",
       "      <td>3748.0</td>\n",
       "      <td>2022-10-01</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30979</th>\n",
       "      <td>2023-03-01</td>\n",
       "      <td>reczzYlxM27XpC4ga</td>\n",
       "      <td>7990.0</td>\n",
       "      <td>2023-03-01</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30980</th>\n",
       "      <td>2023-04-01</td>\n",
       "      <td>reczzYlxM27XpC4ga</td>\n",
       "      <td>10990.0</td>\n",
       "      <td>2023-03-01</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30981</th>\n",
       "      <td>2023-06-01</td>\n",
       "      <td>reczzYlxM27XpC4ga</td>\n",
       "      <td>6990.0</td>\n",
       "      <td>2023-03-01</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30982</th>\n",
       "      <td>2023-04-01</td>\n",
       "      <td>recZzYw6clmFYpmN6</td>\n",
       "      <td>7990.0</td>\n",
       "      <td>2023-04-01</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30983</th>\n",
       "      <td>2023-01-01</td>\n",
       "      <td>reczzzJnlfOG5EKex</td>\n",
       "      <td>15990.0</td>\n",
       "      <td>2023-01-01</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>30195 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            date             client    money first_date  rn  period\n",
       "0     2023-05-01  rec00076pYVJuhg5l   7990.0 2023-05-01   2       0\n",
       "1     2022-11-01  rec00zU79EXuoL2Oe   5990.0 2022-11-01   2       0\n",
       "2     2022-10-01  rec01rU6UnCflTwCr   3748.0 2022-10-01   2       0\n",
       "3     2022-10-01  rec01rU6UnCflTwCr   3748.0 2022-10-01   3       0\n",
       "4     2022-11-01  rec01rU6UnCflTwCr   3748.0 2022-10-01   4       1\n",
       "...          ...                ...      ...        ...  ..     ...\n",
       "30979 2023-03-01  reczzYlxM27XpC4ga   7990.0 2023-03-01   2       0\n",
       "30980 2023-04-01  reczzYlxM27XpC4ga  10990.0 2023-03-01   3       1\n",
       "30981 2023-06-01  reczzYlxM27XpC4ga   6990.0 2023-03-01   4       3\n",
       "30982 2023-04-01  recZzYw6clmFYpmN6   7990.0 2023-04-01   2       0\n",
       "30983 2023-01-01  reczzzJnlfOG5EKex  15990.0 2023-01-01   2       0\n",
       "\n",
       "[30195 rows x 6 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def cohort_money():\n",
    "    query = f'''\n",
    "    with endd as (\n",
    "                with first_data as (\n",
    "                        SELECT date_trunc('month', min(date)) as first_date,\n",
    "                               клиент as client\n",
    "                        FROM level_2_analytical_tables.transactions\n",
    "                        WHERE first_sale = 1\n",
    "                            and fractional > 0\n",
    "                        GROUP BY client),\n",
    "\n",
    "\n",
    "                all_pays as (\n",
    "                        SELECT date,\n",
    "                               клиент as client,\n",
    "                               amount as money\n",
    "                        FROM level_2_analytical_tables.transactions\n",
    "                        WHERE date >= '2022-01-01'\n",
    "                            AND fractional > 0\n",
    "\n",
    "                        UNION\n",
    "\n",
    "                        SELECT date_trunc('month', min(date)) as date,\n",
    "                               клиент as client,\n",
    "                               amount as money\n",
    "                        FROM level_2_analytical_tables.transactions\n",
    "                        WHERE date >= '2022-01-01'\n",
    "                        and first_sale = 1\n",
    "\n",
    "                            and fractional > 0\n",
    "                        GROUP BY client, money)\n",
    "\n",
    "                select date_trunc('month', a.date) as date, \n",
    "                       a.client, a.money, \n",
    "                       f.first_date,\n",
    "                row_number () over(partition by f.client order by date) as rn\n",
    "                from all_pays as a\n",
    "                inner join first_data as f on a.client = f.client)\n",
    "    select * \n",
    "    from endd \n",
    "    where rn > 1\n",
    "\n",
    "    '''\n",
    "\n",
    "    df = pd.read_sql_query(query, engine)\n",
    "\n",
    "\n",
    "    df['period'] = df['date'].dt.to_period('M').astype(int) - df['first_date'].dt.to_period('M').astype(int)\n",
    "    df = df[df[\"period\"] >= 0]\n",
    "\n",
    "    df = df[df['first_date'] >= '2022-01']\n",
    "    \n",
    "    \n",
    "    \n",
    "    return df\n",
    "\n",
    "\n",
    "df = cohort_money()\n",
    "df\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "48901cef",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "3135"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.to_sql(\n",
    "    name='cohort_money_first_sale',\n",
    "    con=engine,\n",
    "    if_exists='replace',\n",
    "    index=False,\n",
    "    schema='level_3_metrics',\n",
    "    chunksize=10000\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dc3b50f8",
   "metadata": {},
   "source": [
    "### Когортный ср чек "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "82bb4de8",
   "metadata": {},
   "outputs": [],
   "source": [
    "def cohort_money_mean():\n",
    "    query_users = '''with u as (\n",
    "                                select first_date, period, n_customers\n",
    "                                from level_3_metrics.cohort_analysis_first_sale\n",
    "                               ),\n",
    "\n",
    "                                m as(\n",
    "                                select first_date, period, sum(money)\n",
    "                                from level_3_metrics.cohort_money_first_sale\n",
    "                                group by first_date, period\n",
    "                                order by first_date, period)\n",
    "\n",
    "                                select u.first_date,\n",
    "                                       u.period,\n",
    "                                       m.sum,\n",
    "                                       u.n_customers,\n",
    "                                       ROUND(sum / (SELECT n_customers FROM u WHERE u.first_date = m.first_date AND u.period = 0)) AS mean_check\n",
    "                                from u\n",
    "                                full join m on u.first_date = m.first_date and u.period = m.period'''\n",
    "\n",
    "    df = pd.read_sql_query(query_users, engine)\n",
    "\n",
    "    return df\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "68c6ba77",
   "metadata": {},
   "outputs": [],
   "source": [
    "itog.to_sql(\n",
    "    name='cohort_money_mean',\n",
    "    con=engine,\n",
    "    if_exists='replace',\n",
    "    index=False,\n",
    "    schema='level_3_metrics',\n",
    "    chunksize=10000\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b416015c",
   "metadata": {},
   "source": [
    "### Когорты минут"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "d3b04c73",
   "metadata": {},
   "outputs": [],
   "source": [
    "def cohort_minutes():\n",
    "    \n",
    "    query = f'''\n",
    "    with endd as (\n",
    "                with first_data as (\n",
    "                        SELECT date_trunc('month', min(date)) as first_date,\n",
    "                               клиент as client\n",
    "                        FROM level_2_analytical_tables.transactions\n",
    "                        WHERE first_sale = 1\n",
    "                            AND fractional > 0\n",
    "                        GROUP BY client),\n",
    "\n",
    "\n",
    "                all_pays as (\n",
    "                        SELECT date,\n",
    "                               клиент as client,\n",
    "                               (minutes * fractional) as minutes\n",
    "                        FROM level_2_analytical_tables.transactions\n",
    "                        WHERE date >= '2022-01-01'\n",
    "                            AND fractional > 0\n",
    "                            AND minutes is not null\n",
    "\n",
    "                        UNION\n",
    "\n",
    "                        SELECT date_trunc('month', min(date)) as date,\n",
    "                               клиент as client,\n",
    "                               (minutes * fractional) as minutes\n",
    "                        FROM level_2_analytical_tables.transactions\n",
    "                        WHERE date >= '2022-01-01'\n",
    "                            AND first_sale = 1\n",
    "                            AND minutes is not null\n",
    "                            AND fractional > 0\n",
    "                        GROUP BY client, minutes, fractional )\n",
    "\n",
    "                SELECT date_trunc('month', a.date) as date, \n",
    "                       a.client, a.minutes, \n",
    "                       f.first_date,\n",
    "                       row_number () over(partition by f.client order by date) as rn\n",
    "                FROM all_pays as a\n",
    "                INNER JOIN first_data as f on a.client = f.client)\n",
    "    SELECT * \n",
    "    FROM endd \n",
    "    WHERE rn > 1\n",
    "\n",
    "    '''\n",
    "\n",
    "    df = pd.read_sql_query(query, engine)\n",
    "\n",
    "\n",
    "    df['period'] = df['date'].dt.to_period('M').astype(int) - df['first_date'].dt.to_period('M').astype(int)\n",
    "    df = df[df[\"period\"] >= 0]\n",
    "\n",
    "    df = df[df['first_date'] >= '2022-01']\n",
    "\n",
    "return df\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "3fd4cbbb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2860"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_minutes.to_sql(\n",
    "    name='cohort_minutes_first_sale',\n",
    "    con=engine,\n",
    "    if_exists='replace',\n",
    "    index=False,\n",
    "    schema='level_3_metrics',\n",
    "    chunksize=10000\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "10e17727",
   "metadata": {},
   "source": [
    "### Для когорты покупателей "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "d289217a",
   "metadata": {},
   "outputs": [],
   "source": [
    "query = f'''\n",
    "with endd as (\n",
    "            with first_data as (\n",
    "                    SELECT date_trunc('month', min(date)) as first_date,\n",
    "                           клиент as client\n",
    "                    FROM level_2_analytical_tables.transactions\n",
    "                    WHERE first_sale = 1\n",
    "                        and fractional > 0\n",
    "                        and date >= '2022-01-01'\n",
    "                        and rn_package_id = 1\n",
    "                    GROUP BY client),\n",
    "\n",
    "\n",
    "            all_pays as (\n",
    "                    SELECT date,\n",
    "                           клиент as client\n",
    "                    FROM level_2_analytical_tables.transactions\n",
    "                    WHERE date >= '2022-01-01'\n",
    "                        AND fractional > 0\n",
    "\n",
    "                    UNION\n",
    "\n",
    "                    SELECT date_trunc('month', min(date)) as date,\n",
    "                           клиент as client\n",
    "                    FROM level_2_analytical_tables.transactions\n",
    "                    WHERE date >= '2022-01-01'\n",
    "                    and first_sale = 1\n",
    "                    \n",
    "                        and fractional > 0\n",
    "                    GROUP BY client)\n",
    "\n",
    "            select date_trunc('month', a.date) as date, \n",
    "                   a.client, \n",
    "                   f.first_date\n",
    "            from all_pays as a\n",
    "            inner join first_data as f on a.client = f.client)\n",
    "select * \n",
    "from endd \n",
    "\n",
    "'''\n",
    "\n",
    "df = pd.read_sql_query(query, engine)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "1c8aedb4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>period_number</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "      <th>7</th>\n",
       "      <th>8</th>\n",
       "      <th>9</th>\n",
       "      <th>...</th>\n",
       "      <th>17</th>\n",
       "      <th>18</th>\n",
       "      <th>19</th>\n",
       "      <th>20</th>\n",
       "      <th>21</th>\n",
       "      <th>22</th>\n",
       "      <th>23</th>\n",
       "      <th>24</th>\n",
       "      <th>25</th>\n",
       "      <th>26</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>cohort</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2022-01</th>\n",
       "      <td>280.0</td>\n",
       "      <td>22.0</td>\n",
       "      <td>45.0</td>\n",
       "      <td>59.0</td>\n",
       "      <td>36.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-02</th>\n",
       "      <td>412.0</td>\n",
       "      <td>39.0</td>\n",
       "      <td>94.0</td>\n",
       "      <td>64.0</td>\n",
       "      <td>18.0</td>\n",
       "      <td>18.0</td>\n",
       "      <td>52.0</td>\n",
       "      <td>43.0</td>\n",
       "      <td>41.0</td>\n",
       "      <td>36.0</td>\n",
       "      <td>...</td>\n",
       "      <td>8.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-03</th>\n",
       "      <td>393.0</td>\n",
       "      <td>43.0</td>\n",
       "      <td>33.0</td>\n",
       "      <td>25.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>38.0</td>\n",
       "      <td>43.0</td>\n",
       "      <td>32.0</td>\n",
       "      <td>37.0</td>\n",
       "      <td>31.0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>16.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-04</th>\n",
       "      <td>393.0</td>\n",
       "      <td>56.0</td>\n",
       "      <td>45.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>46.0</td>\n",
       "      <td>34.0</td>\n",
       "      <td>52.0</td>\n",
       "      <td>44.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>...</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-05</th>\n",
       "      <td>212.0</td>\n",
       "      <td>27.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>37.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>34.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>...</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-06</th>\n",
       "      <td>328.0</td>\n",
       "      <td>34.0</td>\n",
       "      <td>56.0</td>\n",
       "      <td>37.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>31.0</td>\n",
       "      <td>27.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>18.0</td>\n",
       "      <td>...</td>\n",
       "      <td>9.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-07</th>\n",
       "      <td>378.0</td>\n",
       "      <td>58.0</td>\n",
       "      <td>40.0</td>\n",
       "      <td>67.0</td>\n",
       "      <td>51.0</td>\n",
       "      <td>38.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>23.0</td>\n",
       "      <td>...</td>\n",
       "      <td>6.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-08</th>\n",
       "      <td>499.0</td>\n",
       "      <td>73.0</td>\n",
       "      <td>77.0</td>\n",
       "      <td>84.0</td>\n",
       "      <td>66.0</td>\n",
       "      <td>39.0</td>\n",
       "      <td>39.0</td>\n",
       "      <td>43.0</td>\n",
       "      <td>29.0</td>\n",
       "      <td>16.0</td>\n",
       "      <td>...</td>\n",
       "      <td>8.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-09</th>\n",
       "      <td>815.0</td>\n",
       "      <td>129.0</td>\n",
       "      <td>183.0</td>\n",
       "      <td>164.0</td>\n",
       "      <td>93.0</td>\n",
       "      <td>69.0</td>\n",
       "      <td>102.0</td>\n",
       "      <td>80.0</td>\n",
       "      <td>31.0</td>\n",
       "      <td>22.0</td>\n",
       "      <td>...</td>\n",
       "      <td>15.0</td>\n",
       "      <td>14.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-10</th>\n",
       "      <td>995.0</td>\n",
       "      <td>212.0</td>\n",
       "      <td>177.0</td>\n",
       "      <td>171.0</td>\n",
       "      <td>75.0</td>\n",
       "      <td>86.0</td>\n",
       "      <td>73.0</td>\n",
       "      <td>44.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>...</td>\n",
       "      <td>16.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-11</th>\n",
       "      <td>1312.0</td>\n",
       "      <td>146.0</td>\n",
       "      <td>162.0</td>\n",
       "      <td>204.0</td>\n",
       "      <td>110.0</td>\n",
       "      <td>81.0</td>\n",
       "      <td>94.0</td>\n",
       "      <td>34.0</td>\n",
       "      <td>22.0</td>\n",
       "      <td>39.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-12</th>\n",
       "      <td>977.0</td>\n",
       "      <td>74.0</td>\n",
       "      <td>59.0</td>\n",
       "      <td>90.0</td>\n",
       "      <td>64.0</td>\n",
       "      <td>44.0</td>\n",
       "      <td>29.0</td>\n",
       "      <td>29.0</td>\n",
       "      <td>40.0</td>\n",
       "      <td>42.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-01</th>\n",
       "      <td>1066.0</td>\n",
       "      <td>68.0</td>\n",
       "      <td>101.0</td>\n",
       "      <td>124.0</td>\n",
       "      <td>55.0</td>\n",
       "      <td>27.0</td>\n",
       "      <td>42.0</td>\n",
       "      <td>34.0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>52.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-02</th>\n",
       "      <td>1055.0</td>\n",
       "      <td>80.0</td>\n",
       "      <td>77.0</td>\n",
       "      <td>85.0</td>\n",
       "      <td>27.0</td>\n",
       "      <td>23.0</td>\n",
       "      <td>59.0</td>\n",
       "      <td>45.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>65.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-03</th>\n",
       "      <td>1062.0</td>\n",
       "      <td>181.0</td>\n",
       "      <td>106.0</td>\n",
       "      <td>58.0</td>\n",
       "      <td>32.0</td>\n",
       "      <td>49.0</td>\n",
       "      <td>67.0</td>\n",
       "      <td>31.0</td>\n",
       "      <td>57.0</td>\n",
       "      <td>32.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-04</th>\n",
       "      <td>707.0</td>\n",
       "      <td>117.0</td>\n",
       "      <td>50.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>27.0</td>\n",
       "      <td>37.0</td>\n",
       "      <td>42.0</td>\n",
       "      <td>36.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>14.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-05</th>\n",
       "      <td>388.0</td>\n",
       "      <td>77.0</td>\n",
       "      <td>40.0</td>\n",
       "      <td>37.0</td>\n",
       "      <td>18.0</td>\n",
       "      <td>22.0</td>\n",
       "      <td>39.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-06</th>\n",
       "      <td>345.0</td>\n",
       "      <td>74.0</td>\n",
       "      <td>47.0</td>\n",
       "      <td>33.0</td>\n",
       "      <td>23.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>23.0</td>\n",
       "      <td>22.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-07</th>\n",
       "      <td>307.0</td>\n",
       "      <td>31.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>42.0</td>\n",
       "      <td>21.0</td>\n",
       "      <td>16.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>17.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-08</th>\n",
       "      <td>404.0</td>\n",
       "      <td>98.0</td>\n",
       "      <td>56.0</td>\n",
       "      <td>41.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>23.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-09</th>\n",
       "      <td>672.0</td>\n",
       "      <td>136.0</td>\n",
       "      <td>65.0</td>\n",
       "      <td>33.0</td>\n",
       "      <td>36.0</td>\n",
       "      <td>45.0</td>\n",
       "      <td>31.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-10</th>\n",
       "      <td>711.0</td>\n",
       "      <td>125.0</td>\n",
       "      <td>67.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>31.0</td>\n",
       "      <td>42.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-11</th>\n",
       "      <td>695.0</td>\n",
       "      <td>153.0</td>\n",
       "      <td>71.0</td>\n",
       "      <td>32.0</td>\n",
       "      <td>22.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-12</th>\n",
       "      <td>406.0</td>\n",
       "      <td>46.0</td>\n",
       "      <td>16.0</td>\n",
       "      <td>18.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-01</th>\n",
       "      <td>495.0</td>\n",
       "      <td>17.0</td>\n",
       "      <td>23.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-02</th>\n",
       "      <td>400.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-03</th>\n",
       "      <td>269.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>27 rows × 27 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "period_number      0      1      2      3      4     5      6     7     8   \\\n",
       "cohort                                                                       \n",
       "2022-01         280.0   22.0   45.0   59.0   36.0  11.0   13.0  28.0  28.0   \n",
       "2022-02         412.0   39.0   94.0   64.0   18.0  18.0   52.0  43.0  41.0   \n",
       "2022-03         393.0   43.0   33.0   25.0   13.0  38.0   43.0  32.0  37.0   \n",
       "2022-04         393.0   56.0   45.0   24.0   46.0  34.0   52.0  44.0  26.0   \n",
       "2022-05         212.0   27.0   26.0   37.0   19.0  26.0   34.0  20.0  11.0   \n",
       "2022-06         328.0   34.0   56.0   37.0   26.0  31.0   27.0  10.0  13.0   \n",
       "2022-07         378.0   58.0   40.0   67.0   51.0  38.0   26.0  24.0  20.0   \n",
       "2022-08         499.0   73.0   77.0   84.0   66.0  39.0   39.0  43.0  29.0   \n",
       "2022-09         815.0  129.0  183.0  164.0   93.0  69.0  102.0  80.0  31.0   \n",
       "2022-10         995.0  212.0  177.0  171.0   75.0  86.0   73.0  44.0  24.0   \n",
       "2022-11        1312.0  146.0  162.0  204.0  110.0  81.0   94.0  34.0  22.0   \n",
       "2022-12         977.0   74.0   59.0   90.0   64.0  44.0   29.0  29.0  40.0   \n",
       "2023-01        1066.0   68.0  101.0  124.0   55.0  27.0   42.0  34.0  35.0   \n",
       "2023-02        1055.0   80.0   77.0   85.0   27.0  23.0   59.0  45.0  24.0   \n",
       "2023-03        1062.0  181.0  106.0   58.0   32.0  49.0   67.0  31.0  57.0   \n",
       "2023-04         707.0  117.0   50.0   28.0   27.0  37.0   42.0  36.0  20.0   \n",
       "2023-05         388.0   77.0   40.0   37.0   18.0  22.0   39.0  12.0   9.0   \n",
       "2023-06         345.0   74.0   47.0   33.0   23.0  24.0   23.0  22.0  10.0   \n",
       "2023-07         307.0   31.0   26.0   42.0   21.0  16.0   15.0  17.0   8.0   \n",
       "2023-08         404.0   98.0   56.0   41.0    9.0  23.0   13.0   8.0   NaN   \n",
       "2023-09         672.0  136.0   65.0   33.0   36.0  45.0   31.0   NaN   NaN   \n",
       "2023-10         711.0  125.0   67.0   26.0   31.0  42.0    NaN   NaN   NaN   \n",
       "2023-11         695.0  153.0   71.0   32.0   22.0   NaN    NaN   NaN   NaN   \n",
       "2023-12         406.0   46.0   16.0   18.0    NaN   NaN    NaN   NaN   NaN   \n",
       "2024-01         495.0   17.0   23.0    NaN    NaN   NaN    NaN   NaN   NaN   \n",
       "2024-02         400.0   13.0    NaN    NaN    NaN   NaN    NaN   NaN   NaN   \n",
       "2024-03         269.0    NaN    NaN    NaN    NaN   NaN    NaN   NaN   NaN   \n",
       "\n",
       "period_number    9   ...    17    18    19    20    21    22    23   24   25  \\\n",
       "cohort               ...                                                       \n",
       "2022-01        26.0  ...   2.0   4.0   5.0   5.0   3.0  11.0   6.0  5.0  5.0   \n",
       "2022-02        36.0  ...   8.0   8.0  11.0  11.0  13.0   6.0  13.0  7.0  8.0   \n",
       "2022-03        31.0  ...   7.0  11.0   6.0  16.0   7.0   4.0   6.0  7.0  NaN   \n",
       "2022-04        19.0  ...   5.0   5.0  15.0   4.0   7.0   3.0   4.0  NaN  NaN   \n",
       "2022-05        15.0  ...   5.0   4.0   7.0   5.0   4.0   2.0   NaN  NaN  NaN   \n",
       "2022-06        18.0  ...   9.0   5.0   7.0   NaN   4.0   NaN   NaN  NaN  NaN   \n",
       "2022-07        23.0  ...   6.0   6.0   6.0   5.0   NaN   NaN   NaN  NaN  NaN   \n",
       "2022-08        16.0  ...   8.0   9.0   7.0   NaN   NaN   NaN   NaN  NaN  NaN   \n",
       "2022-09        22.0  ...  15.0  14.0   NaN   NaN   NaN   NaN   NaN  NaN  NaN   \n",
       "2022-10        15.0  ...  16.0   NaN   NaN   NaN   NaN   NaN   NaN  NaN  NaN   \n",
       "2022-11        39.0  ...   NaN   NaN   NaN   NaN   NaN   NaN   NaN  NaN  NaN   \n",
       "2022-12        42.0  ...   NaN   NaN   NaN   NaN   NaN   NaN   NaN  NaN  NaN   \n",
       "2023-01        52.0  ...   NaN   NaN   NaN   NaN   NaN   NaN   NaN  NaN  NaN   \n",
       "2023-02        65.0  ...   NaN   NaN   NaN   NaN   NaN   NaN   NaN  NaN  NaN   \n",
       "2023-03        32.0  ...   NaN   NaN   NaN   NaN   NaN   NaN   NaN  NaN  NaN   \n",
       "2023-04        14.0  ...   NaN   NaN   NaN   NaN   NaN   NaN   NaN  NaN  NaN   \n",
       "2023-05        13.0  ...   NaN   NaN   NaN   NaN   NaN   NaN   NaN  NaN  NaN   \n",
       "2023-06        11.0  ...   NaN   NaN   NaN   NaN   NaN   NaN   NaN  NaN  NaN   \n",
       "2023-07         NaN  ...   NaN   NaN   NaN   NaN   NaN   NaN   NaN  NaN  NaN   \n",
       "2023-08         NaN  ...   NaN   NaN   NaN   NaN   NaN   NaN   NaN  NaN  NaN   \n",
       "2023-09         NaN  ...   NaN   NaN   NaN   NaN   NaN   NaN   NaN  NaN  NaN   \n",
       "2023-10         NaN  ...   NaN   NaN   NaN   NaN   NaN   NaN   NaN  NaN  NaN   \n",
       "2023-11         NaN  ...   NaN   NaN   NaN   NaN   NaN   NaN   NaN  NaN  NaN   \n",
       "2023-12         NaN  ...   NaN   NaN   NaN   NaN   NaN   NaN   NaN  NaN  NaN   \n",
       "2024-01         NaN  ...   NaN   NaN   NaN   NaN   NaN   NaN   NaN  NaN  NaN   \n",
       "2024-02         NaN  ...   NaN   NaN   NaN   NaN   NaN   NaN   NaN  NaN  NaN   \n",
       "2024-03         NaN  ...   NaN   NaN   NaN   NaN   NaN   NaN   NaN  NaN  NaN   \n",
       "\n",
       "period_number   26  \n",
       "cohort              \n",
       "2022-01        4.0  \n",
       "2022-02        NaN  \n",
       "2022-03        NaN  \n",
       "2022-04        NaN  \n",
       "2022-05        NaN  \n",
       "2022-06        NaN  \n",
       "2022-07        NaN  \n",
       "2022-08        NaN  \n",
       "2022-09        NaN  \n",
       "2022-10        NaN  \n",
       "2022-11        NaN  \n",
       "2022-12        NaN  \n",
       "2023-01        NaN  \n",
       "2023-02        NaN  \n",
       "2023-03        NaN  \n",
       "2023-04        NaN  \n",
       "2023-05        NaN  \n",
       "2023-06        NaN  \n",
       "2023-07        NaN  \n",
       "2023-08        NaN  \n",
       "2023-09        NaN  \n",
       "2023-10        NaN  \n",
       "2023-11        NaN  \n",
       "2023-12        NaN  \n",
       "2024-01        NaN  \n",
       "2024-02        NaN  \n",
       "2024-03        NaN  \n",
       "\n",
       "[27 rows x 27 columns]"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Создание столбца 'cohort'\n",
    "df['cohort'] = df.groupby('client')['date'].transform('min').dt.to_period('M')\n",
    "\n",
    "# df['date'] = pd.to_datetime(df['date'])\n",
    "df['cohort_for_datalens'] = df.groupby('client')['date'].transform('min')\n",
    "\n",
    "\n",
    "# Группировка данных и подсчет количества клиентов\n",
    "df_cohort = df.groupby(['cohort_for_datalens','cohort', 'date']).agg(n_customers=('client', 'nunique')).reset_index()\n",
    "\n",
    "# Рассчет номера периода\n",
    "df_cohort['period_number'] = (df_cohort['date'].dt.to_period('M') - df_cohort['cohort']).apply(lambda x: x.n)\n",
    "\n",
    "# Построение когортного графика с количеством клиентов\n",
    "customer_matrix = df_cohort.pivot_table(index='cohort', columns='period_number', values='n_customers', aggfunc='sum')\n",
    "customer_matrix"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
